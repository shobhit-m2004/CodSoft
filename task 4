#include <iostream>
#include <vector>
#include <string> 
#include <cstdlib> 

using namespace std;

struct Task {
    string description;
    bool completed;
};

int main() {
    vector<Task> tasks;

    while (true) {
        cout << "To-Do List" << endl;
        cout << "1. Add Task" << endl;
        cout << "2. View Tasks" << endl;
        cout << "3. Mark Task as Completed" << endl;
        cout << "4. Exit" << endl;

        int choice = 0;
        cin >> choice;

        if (choice == 1) {
            cout << "Enter task description: ";
            string description;
            cin.ignore(); 
            getline(cin, description);
            Task newTask = {description, false};
            tasks.push_back(newTask);
            cout << "Task added: " << description << endl;
        } else if (choice == 2) {
            if (tasks.empty()) {
                cout << "No tasks in the list." << endl;
            } else {
                cout << "Tasks in the list:" << endl;
                for (size_t i = 0; i < tasks.size(); ++i) {
                    cout << (i + 1) << ". ";
                    if (tasks[i].completed) {
                        cout << "[X] ";
                    } else {
                        cout << "[ ] ";
                    }
                    cout << tasks[i].description << endl;
                }
            }
        } else if (choice == 3) {
            if (tasks.empty()) {
                cout << "No tasks in the list." << endl;
            } else {
                cout << "Enter the task number to mark as completed: ";
                int taskNumber = 0;
                cin >> taskNumber;
                if (taskNumber >= 1 && taskNumber <= static_cast<int>(tasks.size())) {
                    tasks[taskNumber - 1].completed = true;
                    cout << "Task marked as completed: " << tasks[taskNumber - 1].description << endl;
                } else {
                    cout << "Invalid task number." << endl;
                }
            }
        } else if (choice == 4) {
            cout << "Exiting." << endl;
            break;
        } else {
            cout << "Invalid choice. Please select a valid option." << endl;
        }

        cout << endl;
    }

    return 0;
}
